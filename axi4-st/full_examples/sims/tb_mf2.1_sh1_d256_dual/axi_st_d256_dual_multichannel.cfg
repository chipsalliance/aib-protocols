MODULE axi_st_d256_dual_multichannel


// PHY and AIB Configuration
NUM_CHAN			7
CHAN_TYPE			Gen1Only		//Gen1Only, Gen2Only, Gen2, AIBO
//TX_RATE               Asymmetric generates all possible types
//RX_RATE               Asymmetric generates all possible types

// Channel Alignment Strobe Configuration
TX_ENABLE_STROBE		True	// If False, all strobe functionality is removed.
RX_ENABLE_STROBE		True	// If False, all strobe functionality is removed.
TX_PERSISTENT_STROBE		True	// If True strobes are persistent (always there). If false, they are recoverable and can be reused for data
RX_PERSISTENT_STROBE		True	// If True strobes are persistent (always there). If false, they are recoverable and can be reused for data
TX_USER_STROBE			True	// If True, then we input user generated signal
RX_USER_STROBE			True	// If True, then we input user generated signal
TX_STROBE_GEN1_LOC		1	// Location of Strobe when in Gen1 Mode
RX_STROBE_GEN1_LOC		1	// Location of Strobe when in Gen1 Mode

// Word Marker Configuration
TX_ENABLE_MARKER		True	// If False, all Marker functionality is removed. 
RX_ENABLE_MARKER		True	// If False, all Marker functionality is removed. 
TX_PERSISTENT_MARKER		True	// If True Markers are persistent (always there). If false, they are recoverable and can be reused for data
RX_PERSISTENT_MARKER		True	// If True Markers are persistent (always there). If false, they are recoverable and can be reused for data//
TX_USER_MARKER			True	
RX_USER_MARKER			True	
TX_MARKER_GEN1_LOC		39	// Location of Marker when in Gen1 Mode
RX_MARKER_GEN1_LOC		39	// Location of Marker when in Gen1 Mode
TX_REG_PHY              False
RX_REG_PHY              False

SUPPORT_ASYMMETRIC		True	// Support Asymmetric Gearboxing (e.g. Full to Half)


// This is the Replicated Struct (RSTRUCT), which is the base component for asymmetric gearboxing.
	// It should always be sized for Full Rate case.
	// The RSTRUCT will effectively be replicated by 1, 2 or 4 based off of the settings in CHAN_TYPE
	// So the actual widths coudl be 4x bigger than shown below.
	// Also, all scalers (except valid,ready) will be converted to busses, e.g.:
	//     input user_tid;
	// becomes
	//     input [0:0]  user_tid;
	// as this facilitates the replication needed for the asymmetry

llink ST_M2S
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        58

  output user_m2s_tdata    256
  input user_m2s_tready    ready
  output user_m2s_tvalid   valid
}


llink ST_S2M
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        58

  input user_s2m_tdata    256
  output user_s2m_tready    ready
  input user_s2m_tvalid   valid
}

