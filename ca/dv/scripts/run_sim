#!/bin/csh -f

## ////////////////////////////////////////////////////////////////////////////////////////////////////
## //
## //        Copyright (C) 2021 Eximius Design
## //                All Rights Reserved
## //
## //
## // Licensed under the Apache License, Version 2.0 (the "License");
## // you may not use this file except in compliance with the License.
## // You may obtain a copy of the License at
## //
## //     http://www.apache.org/licenses/LICENSE-2.0
## //
## // Unless required by applicable law or agreed to in writing, software
## // distributed under the License is distributed on an "AS IS" BASIS,
## // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## // See the License for the specific language governing permissions and
## // limitations under the License.
## //
## // Functional Descript: Channel Alignment Test run File
## //
## // run is as:   ./run_sim
## //
## ////////////////////////////////////////////////////////////////////////////////////////////////////


set d_cfg   = "sailrock_cfg.txt"
set mfile   = "makefile"
set sdir    = "scripts"

set ver     = `grep "aib_ver" $d_cfg`
set run_ver = m$ver[2]s$ver[3]
echo "$d_cfg is $run_ver mode"

set rep     = `grep "MODE :=" makefile`
set new_rep = `echo "MODE := $run_ver"`

echo "Replace $mfile from ==${rep}== to MODE := $run_ver"
## sed -i 's#'$rep'#MODE := '$run_ver'#g' $mfile
sed -i "s/$rep/$new_rep/g" $mfile
set seed         = 0
set seed_en      = 0
set waves_def_en = 0 
set nowaves      = 0
set cov_nowaves  = 0
set cov_waves    = 0
set fatal        = 0 
 
if ($#argv >= 1 ) then
set scenario = $argv[1]
else
set scenario = "ca_basic_test_c"
endif
set arg_start_point = 2
####make SCENARIO=$scenario run_all ###
################
        while ($#argv >= $arg_start_point ) 
            switch ($argv[$arg_start_point])
                case [0-9]* :   # User SEED value
                    set nowaves      = 0     # Type of flavour to select the waves and coverage
                    set vip_waves    = 0
                    set cov_nowaves  = 0
                    set cov_waves    = 0
                    set seed_en      = 1
                    set seed         = $argv[$arg_start_point]
                    echo " SEED VALUE"
                    breaksw
                case 'nowaves' :  # No waves enabled
                    set nowaves      = 1
                    set cov_nowaves  = 0
                    set cov_waves    = 0
                    set waves_def_en = 1     # Use to Tell Argument has waves related Flavour 
                    echo " Argument is nowaves"
                    breaksw
                case 'cov_nowaves' :  # cov with No waves
                    set nowaves      = 0
                    set cov_nowaves  = 1
                    set cov_waves    = 0
                    set waves_def_en = 1 
                    echo " Argument is cov_nowaves"
                    breaksw
                case 'cov_waves' :  # cov with waves enable
                    set nowaves      = 0
                    set cov_nowaves  = 0
                    set cov_waves    = 1
                    set waves_def_en = 1 
                    echo " Argument is cov_waves"
                    breaksw
                default:     
                    set fatal        = 1  
                    set nowaves      = 0
                    set cov_nowaves  = 0
                    set cov_waves    = 0
                    set waves_def_en = 0 
                    echo " Argument is invalid type"
                    make help
                    breaksw
            endsw
	    @ arg_start_point++
         end  #### while

        if( $fatal == 0 ) then  
            if ( $nowaves == 1 ) then    # No Waves
                echo "NO WAVE DUMP SELECTED "
                set waves          = "ca_no_shm.tcl"        
            else if ( $cov_nowaves == 1 ) then  # No Waves with Cov enable
                echo "COVERAGE ENABLED NO WAVE DUMP SELECTED "
                set waves          = "ca_no_shm.tcl"  
                set mfile          = "makefile"
                set rep            = `grep "COV :=" makefile`
                set new_rep        = `echo "COV := enable"`
                echo "Replace $mfile from ==${rep}== to COV := $new_rep"
                sed -i "s/$rep/$new_rep/g" $mfile
            else if ( $cov_waves == 1 ) then  # Waves with Cov enable
                echo "WAVE DUMP and COVERAGE ENABLED "
                set waves          = "ca_shm.tcl"  
                set mfile          = "makefile"
                set rep            = `grep "COV :=" makefile`
                set new_rep        = `echo "COV := enable"`
                echo "Replace $mfile from ==${rep}== to COV := $new_rep"
                sed -i "s/$rep/$new_rep/g" $mfile
            endif  #if ($nowaves == 1 )
	     ## MAKEFILE Argument passing Format 
	      if ($seed_en == 1 && $waves_def_en == 1 ) then
                  echo "WAVE and SEED SELECTION DONE "
                  make SCENARIO=$scenario run_all WAVES=$waves SEED=$seed
              else if ($seed_en == 1 ) then
                  echo "SEED SELECTION DONE "
                  make SCENARIO=$scenario run_all SEED=$seed
              else if ($waves_def_en == 1 ) then
                  echo "WAVE SELECTION DONE "
                  make SCENARIO=$scenario run_all WAVES=$waves
	      else
                  echo "NO WAVES ARG PROVIDED... BY DEFAULT WAVE DUMP WILL BE ENABLED "
                  make SCENARIO=$scenario run_all
             endif # if ($waves_def_en == 1)
        endif # if ( $fatal == 0)
#############
