MODULE axi_mm


// PHY and AIB Configuration
NUM_CHAN			1
CHAN_TYPE			AIBO		//Gen1Only, Gen2Only, Gen2, AIBO
TX_RATE				Full				// Full, Half, Quarter
RX_RATE				Full				// Full, Half, Quarter

// Channel Alignment Strobe Configuration
TX_ENABLE_STROBE		False		// If False, all strobe functionality is removed.
RX_ENABLE_STROBE		False		// If False, all strobe functionality is removed.
TX_PERSISTENT_STROBE		False		// If True strobes are persistent (always there). If false, they are recoverable and can be reused for data
RX_PERSISTENT_STROBE		False		// If True strobes are persistent (always there). If false, they are recoverable and can be reused for data
TX_USER_STROBE			False	// If True, then we input user generated signal
RX_USER_STROBE			False	// If True, then we input user generated signal
TX_STROBE_GEN1_LOC		7	// Location of Strobe when in Gen1 Mode
RX_STROBE_GEN1_LOC		7	// Location of Strobe when in Gen1 Mode

// Word Marker Configuration
TX_ENABLE_MARKER		False	// If False, all Marker functionality is removed. 
RX_ENABLE_MARKER		False	// If False, all Marker functionality is removed. 
TX_PERSISTENT_MARKER		False	// If True Markers are persistent (always there). If false, they are recoverable and can be reused for data
RX_PERSISTENT_MARKER		False	// If True Markers are persistent (always there). If false, they are recoverable and can be reused for data//
TX_USER_MARKER			False	
RX_USER_MARKER			False	
TX_MARKER_GEN1_LOC		39	// Location of Marker when in Gen1 Mode
RX_MARKER_GEN1_LOC		39	// Location of Marker when in Gen1 Mode
TX_REG_PHY              False
RX_REG_PHY              False

// Packetization
TX_ENABLE_PACKETIZATION			True	
RX_ENABLE_PACKETIZATION			True	
TX_PACKET_MAX_SIZE			0	// Number of bits to packetize to. 0 means all available data.
RX_PACKET_MAX_SIZE			0	// Number of bits to packetize to. 0 means all available data.
PACKETIZATION_PACKING_EN		False	// If True, enable packing which makes better use of the BW

llink AR_M2S
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        8

  output user_m2s_arid     4
  output user_m2s_arsize   3
  output user_m2s_arlen    8
  output user_m2s_arburst  2
  output user_m2s_araddr   32
  output user_m2s_arvalid  valid
  input  user_m2s_arready  ready
}

llink AW_M2S
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        8

  output user_m2s_awid     4
  output user_m2s_awsize   3
  output user_m2s_awlen    8
  output user_m2s_awburst  2
  output user_m2s_awaddr   32
  output user_m2s_awvalid  valid
  input  user_m2s_awready  ready
}

llink W_M2S
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        40

  output user_m2s_wid      4
  output user_m2s_wdata    128
  output user_m2s_wstrb    16
  output user_m2s_wlast    
  output user_m2s_wvalid   valid
  input  user_m2s_wready   ready
}

llink R_M2S
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        40

  input  user_m2s_rid      4
  input  user_m2s_rdata    128
  input  user_m2s_rlast    
  input  user_m2s_rresp    2
  input  user_m2s_rvalid   valid
  output user_m2s_rready   ready
}
llink B_M2S
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        8

  input  user_m2s_bid      4
  input  user_m2s_bresp    2
  input  user_m2s_bvalid   valid
  output user_m2s_bready   ready
}



llink AR_S2M
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        8

  input user_s2m_arid     4
  input user_s2m_arsize   3
  input user_s2m_arlen    8
  input user_s2m_arburst  2
  input user_s2m_araddr   32
  input user_s2m_arvalid  valid
  output  user_s2m_arready  ready
}

llink AW_S2M
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        8

  input user_s2m_awid     4
  input user_s2m_awsize   3
  input user_s2m_awlen    8
  input user_s2m_awburst  2
  input user_s2m_awaddr   32
  input user_s2m_awvalid  valid
  output  user_s2m_awready  ready
}

llink W_S2M
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        40

  input user_s2m_wid      4
  input user_s2m_wdata    128
  input user_s2m_wstrb    16
  input user_s2m_wlast    
  input user_s2m_wvalid   valid
  output  user_s2m_wready   ready
}

llink R_S2M
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        40

  output  user_s2m_rid      4
  output  user_s2m_rdata    128
  output  user_s2m_rlast    
  output  user_s2m_rresp    2
  output  user_s2m_rvalid   valid
  input user_s2m_rready   ready
}
llink B_S2M
{
  TX_FIFO_DEPTH        1
  RX_FIFO_DEPTH        8

  output  user_s2m_bid      4
  output  user_s2m_bresp    2
  output  user_s2m_bvalid   valid
  input user_s2m_bready   ready
}

