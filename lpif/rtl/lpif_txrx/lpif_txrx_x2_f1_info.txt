////////////////////////////////////////////////////////////
//
//        (C) Copyright 2021 Eximius Design
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// Data and Channel Size
  Logic Link Data Info
    LogicLink MAIN     downstream TX   75  RX    0
    LogicLink MAIN     upstream TX    0  RX   75
                                -------  -------
    Total     MAIN              TX   75  RX   75

  Channel Info
    MAIN: Each channel is Gen1Only PHY running at Full Rate with 40 bits
    MAIN: 2x channels
    MAIN: Total AIB bits is 80 bits

       TX: No DBI
       TX: Persistent Strobe adds 1 overhead bits per channel
       TX: Persistent Marker adds 1 overhead bits per channel
       TX: Total overhead bits across 2 channels is 4
       TX: Total data bits available 76

       RX: No DBI
       RX: Persistent Strobe adds 1 overhead bits per channel
       RX: Persistent Marker adds 1 overhead bits per channel
       RX: Total overhead bits across 2 channels is 4
       RX: Total data bits available 76

  MAIN TX needs   75 bits of data and has   76 bits available across 2x Gen1Only Full Rate channels so    1 spare bits
  MAIN RX needs   75 bits of data and has   76 bits available across 2x Gen1Only Full Rate channels so    1 spare bits

// Data and Channel Size
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// AXI to Logic Link Data Mapping
// This AXI Data FIFO packing
  assign tx_downstream_data   [   0 +:   4] = dstrm_state          [   0 +:   4]
  assign tx_downstream_data   [   4 +:   2] = dstrm_protid         [   0 +:   2]
  assign tx_downstream_data   [   6 +:  64] = dstrm_data           [   0 +:  64]
  assign tx_downstream_data   [  70 +:   1] = dstrm_dvalid         [   0 +:   1]
  assign tx_downstream_data   [  71 +:   2] = dstrm_crc            [   0 +:   2]
  assign tx_downstream_data   [  73 +:   1] = dstrm_crc_valid      [   0 +:   1]
  assign tx_downstream_data   [  74 +:   1] = dstrm_valid          [   0 +:   1]

  assign rx_upstream_data     [   0 +:   4] = ustrm_state          [   0 +:   4]
  assign rx_upstream_data     [   4 +:   2] = ustrm_protid         [   0 +:   2]
  assign rx_upstream_data     [   6 +:  64] = ustrm_data           [   0 +:  64]
  assign rx_upstream_data     [  70 +:   1] = ustrm_dvalid         [   0 +:   1]
  assign rx_upstream_data     [  71 +:   2] = ustrm_crc            [   0 +:   2]
  assign rx_upstream_data     [  73 +:   1] = ustrm_crc_valid      [   0 +:   1]
  assign rx_upstream_data     [  74 +:   1] = ustrm_valid          [   0 +:   1]
// AXI to Logic Link Data Mapping
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// AXI to PHY IF Mapping AXI Manager Transmit
  Channel 0 TX   [   0] = dstrm_state          [   0]
  Channel 0 TX   [   1] = 1'b1 // STROBE
  Channel 0 TX   [   2] = dstrm_state          [   1]
  Channel 0 TX   [   3] = dstrm_state          [   2]
  Channel 0 TX   [   4] = dstrm_state          [   3]
  Channel 0 TX   [   5] = dstrm_protid         [   0]
  Channel 0 TX   [   6] = dstrm_protid         [   1]
  Channel 0 TX   [   7] = dstrm_data           [   0]
  Channel 0 TX   [   8] = dstrm_data           [   1]
  Channel 0 TX   [   9] = dstrm_data           [   2]
  Channel 0 TX   [  10] = dstrm_data           [   3]
  Channel 0 TX   [  11] = dstrm_data           [   4]
  Channel 0 TX   [  12] = dstrm_data           [   5]
  Channel 0 TX   [  13] = dstrm_data           [   6]
  Channel 0 TX   [  14] = dstrm_data           [   7]
  Channel 0 TX   [  15] = dstrm_data           [   8]
  Channel 0 TX   [  16] = dstrm_data           [   9]
  Channel 0 TX   [  17] = dstrm_data           [  10]
  Channel 0 TX   [  18] = dstrm_data           [  11]
  Channel 0 TX   [  19] = dstrm_data           [  12]
  Channel 0 TX   [  20] = dstrm_data           [  13]
  Channel 0 TX   [  21] = dstrm_data           [  14]
  Channel 0 TX   [  22] = dstrm_data           [  15]
  Channel 0 TX   [  23] = dstrm_data           [  16]
  Channel 0 TX   [  24] = dstrm_data           [  17]
  Channel 0 TX   [  25] = dstrm_data           [  18]
  Channel 0 TX   [  26] = dstrm_data           [  19]
  Channel 0 TX   [  27] = dstrm_data           [  20]
  Channel 0 TX   [  28] = dstrm_data           [  21]
  Channel 0 TX   [  29] = dstrm_data           [  22]
  Channel 0 TX   [  30] = dstrm_data           [  23]
  Channel 0 TX   [  31] = dstrm_data           [  24]
  Channel 0 TX   [  32] = dstrm_data           [  25]
  Channel 0 TX   [  33] = dstrm_data           [  26]
  Channel 0 TX   [  34] = dstrm_data           [  27]
  Channel 0 TX   [  35] = dstrm_data           [  28]
  Channel 0 TX   [  36] = dstrm_data           [  29]
  Channel 0 TX   [  37] = dstrm_data           [  30]
  Channel 0 TX   [  38] = dstrm_data           [  31]
  Channel 0 TX   [  39] = 1'b0 // MARKER
  Channel 1 TX   [   0] = dstrm_data           [  32]
  Channel 1 TX   [   1] = 1'b1 // STROBE
  Channel 1 TX   [   2] = dstrm_data           [  33]
  Channel 1 TX   [   3] = dstrm_data           [  34]
  Channel 1 TX   [   4] = dstrm_data           [  35]
  Channel 1 TX   [   5] = dstrm_data           [  36]
  Channel 1 TX   [   6] = dstrm_data           [  37]
  Channel 1 TX   [   7] = dstrm_data           [  38]
  Channel 1 TX   [   8] = dstrm_data           [  39]
  Channel 1 TX   [   9] = dstrm_data           [  40]
  Channel 1 TX   [  10] = dstrm_data           [  41]
  Channel 1 TX   [  11] = dstrm_data           [  42]
  Channel 1 TX   [  12] = dstrm_data           [  43]
  Channel 1 TX   [  13] = dstrm_data           [  44]
  Channel 1 TX   [  14] = dstrm_data           [  45]
  Channel 1 TX   [  15] = dstrm_data           [  46]
  Channel 1 TX   [  16] = dstrm_data           [  47]
  Channel 1 TX   [  17] = dstrm_data           [  48]
  Channel 1 TX   [  18] = dstrm_data           [  49]
  Channel 1 TX   [  19] = dstrm_data           [  50]
  Channel 1 TX   [  20] = dstrm_data           [  51]
  Channel 1 TX   [  21] = dstrm_data           [  52]
  Channel 1 TX   [  22] = dstrm_data           [  53]
  Channel 1 TX   [  23] = dstrm_data           [  54]
  Channel 1 TX   [  24] = dstrm_data           [  55]
  Channel 1 TX   [  25] = dstrm_data           [  56]
  Channel 1 TX   [  26] = dstrm_data           [  57]
  Channel 1 TX   [  27] = dstrm_data           [  58]
  Channel 1 TX   [  28] = dstrm_data           [  59]
  Channel 1 TX   [  29] = dstrm_data           [  60]
  Channel 1 TX   [  30] = dstrm_data           [  61]
  Channel 1 TX   [  31] = dstrm_data           [  62]
  Channel 1 TX   [  32] = dstrm_data           [  63]
  Channel 1 TX   [  33] = dstrm_dvalid         [   0]
  Channel 1 TX   [  34] = dstrm_crc            [   0]
  Channel 1 TX   [  35] = dstrm_crc            [   1]
  Channel 1 TX   [  36] = dstrm_crc_valid      [   0]
  Channel 1 TX   [  37] = dstrm_valid          [   0]
  Channel 1 TX   [  38] = 1'b0                
  Channel 1 TX   [  39] = 1'b0 // MARKER
// AXI to PHY IF Mapping AXI Manager Transmit
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// AXI to PHY IF Mapping AXI Manager Receive
  Channel 0 RX   [   0] = ustrm_state          [   0]
  Channel 0 RX   [   1] = 1'b1 // STROBE
  Channel 0 RX   [   2] = ustrm_state          [   1]
  Channel 0 RX   [   3] = ustrm_state          [   2]
  Channel 0 RX   [   4] = ustrm_state          [   3]
  Channel 0 RX   [   5] = ustrm_protid         [   0]
  Channel 0 RX   [   6] = ustrm_protid         [   1]
  Channel 0 RX   [   7] = ustrm_data           [   0]
  Channel 0 RX   [   8] = ustrm_data           [   1]
  Channel 0 RX   [   9] = ustrm_data           [   2]
  Channel 0 RX   [  10] = ustrm_data           [   3]
  Channel 0 RX   [  11] = ustrm_data           [   4]
  Channel 0 RX   [  12] = ustrm_data           [   5]
  Channel 0 RX   [  13] = ustrm_data           [   6]
  Channel 0 RX   [  14] = ustrm_data           [   7]
  Channel 0 RX   [  15] = ustrm_data           [   8]
  Channel 0 RX   [  16] = ustrm_data           [   9]
  Channel 0 RX   [  17] = ustrm_data           [  10]
  Channel 0 RX   [  18] = ustrm_data           [  11]
  Channel 0 RX   [  19] = ustrm_data           [  12]
  Channel 0 RX   [  20] = ustrm_data           [  13]
  Channel 0 RX   [  21] = ustrm_data           [  14]
  Channel 0 RX   [  22] = ustrm_data           [  15]
  Channel 0 RX   [  23] = ustrm_data           [  16]
  Channel 0 RX   [  24] = ustrm_data           [  17]
  Channel 0 RX   [  25] = ustrm_data           [  18]
  Channel 0 RX   [  26] = ustrm_data           [  19]
  Channel 0 RX   [  27] = ustrm_data           [  20]
  Channel 0 RX   [  28] = ustrm_data           [  21]
  Channel 0 RX   [  29] = ustrm_data           [  22]
  Channel 0 RX   [  30] = ustrm_data           [  23]
  Channel 0 RX   [  31] = ustrm_data           [  24]
  Channel 0 RX   [  32] = ustrm_data           [  25]
  Channel 0 RX   [  33] = ustrm_data           [  26]
  Channel 0 RX   [  34] = ustrm_data           [  27]
  Channel 0 RX   [  35] = ustrm_data           [  28]
  Channel 0 RX   [  36] = ustrm_data           [  29]
  Channel 0 RX   [  37] = ustrm_data           [  30]
  Channel 0 RX   [  38] = ustrm_data           [  31]
  Channel 0 RX   [  39] = 1'b0 // MARKER
  Channel 1 RX   [   0] = ustrm_data           [  32]
  Channel 1 RX   [   1] = 1'b1 // STROBE
  Channel 1 RX   [   2] = ustrm_data           [  33]
  Channel 1 RX   [   3] = ustrm_data           [  34]
  Channel 1 RX   [   4] = ustrm_data           [  35]
  Channel 1 RX   [   5] = ustrm_data           [  36]
  Channel 1 RX   [   6] = ustrm_data           [  37]
  Channel 1 RX   [   7] = ustrm_data           [  38]
  Channel 1 RX   [   8] = ustrm_data           [  39]
  Channel 1 RX   [   9] = ustrm_data           [  40]
  Channel 1 RX   [  10] = ustrm_data           [  41]
  Channel 1 RX   [  11] = ustrm_data           [  42]
  Channel 1 RX   [  12] = ustrm_data           [  43]
  Channel 1 RX   [  13] = ustrm_data           [  44]
  Channel 1 RX   [  14] = ustrm_data           [  45]
  Channel 1 RX   [  15] = ustrm_data           [  46]
  Channel 1 RX   [  16] = ustrm_data           [  47]
  Channel 1 RX   [  17] = ustrm_data           [  48]
  Channel 1 RX   [  18] = ustrm_data           [  49]
  Channel 1 RX   [  19] = ustrm_data           [  50]
  Channel 1 RX   [  20] = ustrm_data           [  51]
  Channel 1 RX   [  21] = ustrm_data           [  52]
  Channel 1 RX   [  22] = ustrm_data           [  53]
  Channel 1 RX   [  23] = ustrm_data           [  54]
  Channel 1 RX   [  24] = ustrm_data           [  55]
  Channel 1 RX   [  25] = ustrm_data           [  56]
  Channel 1 RX   [  26] = ustrm_data           [  57]
  Channel 1 RX   [  27] = ustrm_data           [  58]
  Channel 1 RX   [  28] = ustrm_data           [  59]
  Channel 1 RX   [  29] = ustrm_data           [  60]
  Channel 1 RX   [  30] = ustrm_data           [  61]
  Channel 1 RX   [  31] = ustrm_data           [  62]
  Channel 1 RX   [  32] = ustrm_data           [  63]
  Channel 1 RX   [  33] = ustrm_dvalid         [   0]
  Channel 1 RX   [  34] = ustrm_crc            [   0]
  Channel 1 RX   [  35] = ustrm_crc            [   1]
  Channel 1 RX   [  36] = ustrm_crc_valid      [   0]
  Channel 1 RX   [  37] = ustrm_valid          [   0]
  Channel 1 RX   [  38] = 1'b0                
  Channel 1 RX   [  39] = 1'b0 // MARKER
// AXI to PHY IF Mapping AXI Manager Receive
//////////////////////////////////////////////////////////////////////
